-- Migration: Add AI-specific fields to comments table
-- Date: 2025-10-17
-- Description: Extends comments table with fields to track AI-generated comments,
--              including category, suggestion type, processing log reference, and retry count.

-- Add AI-specific columns to comments table
ALTER TABLE comments
  ADD COLUMN created_by_ai BOOLEAN DEFAULT false,
  ADD COLUMN ai_comment_category TEXT CHECK (
    ai_comment_category IS NULL OR
    ai_comment_category IN ('general', 'selected_text')
  ),
  ADD COLUMN ai_suggestion_type TEXT CHECK (
    ai_suggestion_type IS NULL OR
    ai_suggestion_type IN ('missing_concept', 'rewording', 'factual_correction', 'structural_suggestion')
  ),
  ADD COLUMN ai_processing_log_id UUID REFERENCES ai_processing_logs(id) ON DELETE SET NULL,
  ADD COLUMN retry_count INTEGER DEFAULT 0;

-- Constraint: AI comments must have category and suggestion type
ALTER TABLE comments
  ADD CONSTRAINT ai_comment_fields_required CHECK (
    (created_by_ai = false) OR
    (created_by_ai = true AND
     ai_comment_category IS NOT NULL AND
     ai_suggestion_type IS NOT NULL)
  );

-- Index for filtering AI comments by resource
CREATE INDEX idx_comments_created_by_ai ON comments(created_by_ai, resource_id);

-- Comments for documentation
COMMENT ON COLUMN comments.created_by_ai IS 'True if comment was generated by AI, false for user comments';
COMMENT ON COLUMN comments.ai_comment_category IS 'Category: general (standalone) or selected_text (anchored) - AI comments only';
COMMENT ON COLUMN comments.ai_suggestion_type IS 'Type of suggestion: missing_concept, rewording, factual_correction, structural_suggestion';
COMMENT ON COLUMN comments.ai_processing_log_id IS 'Links to detailed AI processing log for debugging and analytics';
COMMENT ON COLUMN comments.retry_count IS 'Number of retry attempts needed to create this comment (text matching failures)';

-- Validation query (run after migration to verify):
-- SELECT column_name, data_type, is_nullable, column_default
-- FROM information_schema.columns
-- WHERE table_name = 'comments'
--   AND (column_name LIKE 'ai_%' OR column_name = 'created_by_ai' OR column_name = 'retry_count')
-- ORDER BY ordinal_position;
--
-- Expected: 5 new columns (created_by_ai, ai_comment_category, ai_suggestion_type, ai_processing_log_id, retry_count)
